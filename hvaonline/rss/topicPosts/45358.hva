<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title><![CDATA[Latest posts for the topic "cách thức quản lý bộ nhớ ram"]]></title>
		<link>http://www.hvaonline.net/hvaonline/posts/list/26.hva</link>
		<description><![CDATA[Latest messages posted in the topic "cách thức quản lý bộ nhớ ram"]]></description>
		<generator>JForum - http://www.jforum.net</generator>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ qua thời gian nghiên cứu đã lâu trên kiến trúc x86.
Mình chỉ thấy cơ chế quản lý bộ nhớ đoạn mà thôi
Không thấy cơ chế paging
Bạn nào biết cơ chế paging thì xin liên hệ với mình
panfider0@gmail.com]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279249</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279249</link>
				<pubDate><![CDATA[Thu, 19 Dec 2013 02:59:15]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Anh vẫn còn nghiên cứu tiếp đấy à?
Anh xem qua link này chưa nhỉ?
http://goo.gl/nO5PZo]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279253</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279253</link>
				<pubDate><![CDATA[Thu, 19 Dec 2013 06:37:25]]> GMT</pubDate>
				<author><![CDATA[ Stanley_00]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ trước khi hỏi mình đã tìm và đọc trên wikipedia và nhiều nguồn khác rồi.
Và mình không hiểu gì hết. 
Chỉ biết là cách qurn lý bộ nhớ ram là paging.
Tuy vậy nhưng chưa hiểu cách paging là như thế nào]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279262</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279262</link>
				<pubDate><![CDATA[Fri, 20 Dec 2013 23:34:35]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ sao không ai giúp cho mình hiểu cơ chế quản lý bộ nhớ ram hết vậy?
MÌnh con một thắc mắc nữa là cơ chế đa xử lý của bộ vi xử lý?
Làm sao để đa xử lý khi mà chương trình được lâp trình để chạy từ trên xuống dưới]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279387</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279387</link>
				<pubDate><![CDATA[Thu, 2 Jan 2014 22:36:46]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ <p></p>
		<cite class="blockquote">panfider wrote:</cite><br>
		<blockquote>sao không ai giúp cho mình hiểu cơ chế quản lý bộ nhớ ram hết vậy?
MÌnh con một thắc mắc nữa là cơ chế đa xử lý của bộ vi xử lý?
Làm sao để đa xử lý khi mà chương trình được lâp trình để chạy từ trên xuống dưới&nbsp;
		</blockquote>

Đại khái là có thể mô tả như sau:
Trước hết phải hiểu "quản lý" là gì. Nó là việc chia chác, đánh địa chỉ, cấp phát, thu hồi, kiểm soát quyền, nạp dữ liệu... RAM cho mỗi chương trình cần đến nó.
Vì sao quản lý RAM theo paging (thay vì theo mỗi byte hoặc từng word) là vì 1 page nó to hơn, không tốn quá nhiều cho việc quản lý, truy cập, đánh địa chỉ..., page cũng bằng nhau để dễ chia chác chứ không có lẻ. Xin cấp 1 vài byte hay 1000 bytes là cấp luôn 1 page dù phần còn thừa không xài đến. Mỗi paging trong x86 là 4KByte/8KB tùy mode, nếu là huge paging nó là 2Mbyte.

Nó cũng tương tự như quản lý đất đai, người ta chia thành lô lớn rồi cấp phát chứ chả ai chia cục nhỏ đến tận mét vuông, xin cấp 10m là cấp cả 1 lô liền nhau 10m chứ không phải cấp 10 ô 1 mét (có thể không liền nhau), không đủ lô 10m thì báo là không còn.

Còn cơ chế đa xử lý, ý nói là nhiều chương trình dù viết tuần tự nhưng các chương trình vẫn chạy song song nhau, dù chỉ có 1 CPU, là do hệ điều hành thực hiện 1 việc gọi là context switch (chuyển ngữ cảnh), nó chia 1 giây ra thành nhiều slot nhỏ (ví dụ 20ms/1 slot), mỗi slot, nó gán quyền dùng CPU (đơn giản là jump tới 1 khúc nào đó để chạy) cho 1 chương trình, hết thời gian trong slot, OS nó "cướp" lại quyền chạy (bằng các ngắt của CPU) rồi save lại state của chương trình vừa bị cướp đó (state chứa thông tin chạy đến lệnh nào, trạng thái thanh ghi ra sao...), rồi load lại state của 1 cái khác đến lượt rồi lại jump, hết slot lại cướp save state. Do 1 slot rất nhỏ so với cảm giác, 1 giây có nhiều slot (20ms vị chi là 50 lần), việc cướp chuyển context cũng rất nhanh, nên cảm thấy trong 1 giây các chương trình chạy song song nhau. Thực chất là "tuần tự" nhưng mỗi ông 1 tí.
Tất nhiên vì đa xử lý nên tất cả sẽ chậm đều đi.

Nói chung cái này phải đọc tài liệu hoặc đi học môn vi xử lý thôi. Chả có cách nào tự nhiên hiểu nhanh mà không đọc và hoặc không học. Vài câu trên forum không thể lý giải hết đâu.]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279524</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279524</link>
				<pubDate><![CDATA[Wed, 22 Jan 2014 03:29:19]]> GMT</pubDate>
				<author><![CDATA[ myquartz]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Cảm ơn myquartz,
myquartz đã cho mình thấy lý thuyết về cơ chế quản lý bộ nhớ(MMU).
Nhưng đó chỉ dừng lại lý thuyết mà thôi, cái mình cần là cơ chế chứ lý thuyết thì mù mờ lắm.
]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279990</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#279990</link>
				<pubDate><![CDATA[Wed, 12 Mar 2014 04:45:30]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Em cũng đang tìm hiểu về vấn đề này.

Anh myquartz giúp em giải đáp là: Có thật sự là các bộ VXL có thể xử lý "song song", em nói "song song" ở đây có nghĩa là "cùng 1 thời điểm" chứ không phải là do nó chia nhỏ các slot ra rồi thực hiện với tốc độ rất nhanh làm cho ta cảm thấy như là nó đang chạy "song song" vậy?.

Có phải điều anh giải thích ở trên chỉ dành cho bộ VXL 1 lõi, chứ không phải các bộ VXL đa lõi như hiện nay, kể cả lõi ảo lẫn lõi thật?.]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280245</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280245</link>
				<pubDate><![CDATA[Wed, 9 Apr 2014 17:41:34]]> GMT</pubDate>
				<author><![CDATA[ hoangcuongflp]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Nhiều core thì nó chạy song song thật sự đó chứ !
Không biết các giáo trình vi xử lý ở VN hiện nay đã cập nhật các VXL đa core và VXL 64-bit chưa chứ hồi tui học vẫn còn học VXL 32-bit 386. Ai mới vừa học môn VXL xong cho biết thông tin nhé.]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280259</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280259</link>
				<pubDate><![CDATA[Thu, 10 Apr 2014 00:19:31]]> GMT</pubDate>
				<author><![CDATA[ invalid-password]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Về cơ chế MMU thực sự (tức là sự triển khai), các bạn có thể ngâm cứu cách Linux kernel quản lý, hoặc đơn giản hơn là lấy source hệ điều hành đơn giản FreeDOS về ngâm cứu về khái niệm. Nó là sự triển khai của ý tưởng mình đã mô tả mà thôi.

Còn về xử lý song song, nếu là đa lõi hoặc đa bộ xử lý, thì nó song song thực sự giữa các CPU/core với nhau, và vẫn "giả" song song với 1 core. Ví dụ nếu máy bạn có 4 core, mà có 4 chương trình cùng chạy, thì lý thuyết là OS sẽ phân đều cho 4 core, và thực sự 4 chương trình này chạy song song nhau (không chia chác gì). Nếu có nhiều hơn, ví dụ 8 chương trình, thì từng cặp 2 cái một sẽ là giả song song trên 4 core (phải chia slot mỗi core cho 2 cái), và 4 core vẫn là song song nhau. Việc này tăng sức mạnh tính toán lên rất nhiều, nên CPU nhiều core mới thay thế loại cũ 1 core. Tất nhiên nếu chỉ 1 chương trình chạy thì cũng chỉ 1 core chạy, 3 core kia ngồi chơi.

Việc xử lý song song thật sự nó cũng có cái giá của nó, một chương trình không chỉ chạy các lệnh, mà còn truy cập tài nguyên khác, việc chạy song song kéo theo là việc xử lý xung đột tài nguyên (bộ nhớ, đĩa vào ra, cổng vào ra...) khi cả 2 cùng dùng đến 1 cái chung nhau. Có hẳn một chương dài về cái này (tiếng Anh nó là process synchronization in operating system), phải đọc thì mới hiểu rõ hơn.

Xử lý song song không chỉ thời 64bit mới có, mà thời 32bit máy chủ với nhiều bộ xử lý (dạng SMP) đã có và hoạt động. Và OS phải hỗ trợ mới tận dụng được không thì chỉ thấy 1 CPU thôi (Windows NT, 2000 hoặc Linux, tất nhiên UNIX thì có từ lâu lâu rồi).]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280271</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280271</link>
				<pubDate><![CDATA[Thu, 10 Apr 2014 05:29:03]]> GMT</pubDate>
				<author><![CDATA[ myquartz]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Mình nghĩ mmu ttrong cpu chỉ là đồ giã mà thôi he he
Hh]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280972</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#280972</link>
				<pubDate><![CDATA[Wed, 9 Jul 2014 06:48:42]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ <p></p>
		<cite class="blockquote">panfider wrote:</cite><br>
		<blockquote>Mình nghĩ mmu ttrong cpu chỉ là đồ giã mà thôi&nbsp;
		</blockquote>
Đừng nghĩ, hãy chỉ ra chứng cứ !  :P ]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281012</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281012</link>
				<pubDate><![CDATA[Sun, 13 Jul 2014 21:38:04]]> GMT</pubDate>
				<author><![CDATA[ invalid-password]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ vì không có tài liệu nào của intel hay arm hoặc ibm nói chính xác về mmu.
Họ chỉ nói chung chung mà thôi :-) 
]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281049</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281049</link>
				<pubDate><![CDATA[Fri, 18 Jul 2014 03:10:31]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Chào panfider,
Mình nhớ có một nick rất giỏi, rất giống nick của bạn, hình như là panfinder thì phải ở trong diễn đàn này.
Theo những gì mình biết, nếu nói paging là quản lý bộ nhớ thì cũng không chính xác, và nói "vì không có tài liệu nào của intel hay arm hoặc ibm nói chính xác về mmu." thì lại càng không chính xác.

Về Arm thì mình không nghiên cứu bao giờ nên không biết, còn đối với Intel, mấy cuốn manuals nói rất kỹ về vấn đề này. Không chỉ về cách quản lý bộ nhớ mà có rất nhiều thứ khác, tất cả đều rất phức tạp, và có liên quan chặt chẽ đến nhau. Ví dụ như bạn nói về "Paging" vậy, Paging chỉ được sử dụng khi Processor(s) chạy trong protected-mode, chế độ mà các hệ điều hành Windows, và *nix ngày nay đang chạy, còn trong real-mode, không có khái niệm "Paging", tất cả processes của ứng dụng và hệ điều hành đều chạy trong một address space. Để học được những khái niệm này tương đối vất vả và điên cuồng, còn nhiều thứ khác như IDT, GDT, ... . Mình cũng không nắm rõ lắm nên chỉ trả lời câu hỏi của bạn như vậy. Nếu bạn muốn thực hành thì điều kiện tốt nhất có lẽ là học cách lập trình cho Linux Kernel.
]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281093</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281093</link>
				<pubDate><![CDATA[Sat, 26 Jul 2014 13:48:07]]> GMT</pubDate>
				<author><![CDATA[ van7hu]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Tài liệu của intel nói tầm bậy về paging
]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281100</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281100</link>
				<pubDate><![CDATA[Sun, 27 Jul 2014 08:13:33]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Cảm thấy thật thiếu sót về kiến thức, không có thời gian nghiên cứu mấy thứ mặc dù là sở thích, nhưng lại không đem lại tiền cho mình, nên cũng chả dám nói nhiều.]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281104</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281104</link>
				<pubDate><![CDATA[Sun, 27 Jul 2014 10:38:48]]> GMT</pubDate>
				<author><![CDATA[ van7hu]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Tôi sẽ trả cho bạn 100 000 vnd nếu bạn nói được cơ chế quản lý bộ nhớ ram
]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281114</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281114</link>
				<pubDate><![CDATA[Sun, 27 Jul 2014 21:59:19]]> GMT</pubDate>
				<author><![CDATA[ panfider]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ <p></p>
		<cite class="blockquote">panfider wrote:</cite><br>
		<blockquote>Tôi sẽ trả cho bạn 100 000 vnd nếu bạn nói được cơ chế quản lý bộ nhớ ram
&nbsp;
		</blockquote>
Cứ đọc đến bài của bác này là lại cười lăng lộn ra ghế. Nói toàn trên trời dưới đất chẳng đâu ra đâu  ;-) ]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281338</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281338</link>
				<pubDate><![CDATA[Mon, 18 Aug 2014 09:04:25]]> GMT</pubDate>
				<author><![CDATA[ levutech]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Thấy bạn chủ thớt rất giống với 1 người trước đây <b>white_or_black2013</b>, cũng rất là đình đám.

<span class="link"> http://www.hvaonline.net/hvaonline/posts/list/44536.hva</span>]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281361</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281361</link>
				<pubDate><![CDATA[Thu, 21 Aug 2014 06:05:48]]> GMT</pubDate>
				<author><![CDATA[ xuanphongdocco]]></author>
			</item>
			<item>
				<title>cách thức quản lý bộ nhớ ram</title>
				<description><![CDATA[ Tôi không nghĩ là chúng ta nên trách họ, có lẽ công việc quá căng thẳng, thành công thì khó đạt được. Nhất là công nghệ thông tin, khi tôi còn là sinh viên, ở phòng ký túc 20 người, lúc nào cũng ồn ào, đọc cái manual của Intel tôi cảm thấy phát điên lên được.]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281362</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/45358.hva#281362</link>
				<pubDate><![CDATA[Thu, 21 Aug 2014 06:59:56]]> GMT</pubDate>
				<author><![CDATA[ van7hu]]></author>
			</item>
	</channel>
</rss>
